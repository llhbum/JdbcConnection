JDBC 인터페이스

JDBC(Java DataBase Connectivity)
- 자바를 이용한 데이터베이스 접속과 SQL 문장의 실행, 실행결과로 얻어진 데이터의 
  핸들링을 제공하는 방법과 절차에 관한 규약

- 자바 프로그램내에서 SQL문을 실행하기 위한 자바 API

- SQL과 프로그래밍 언어의 통합 접근중 한 형태

- JAVA는 표준 인터페이스인 JDBC API를 제공합니다.

- 데이터베이스 벤더, 써드파티에서는 JDBC 인터페이스를 구현한 드라이버를 사용합니다.

Connection, ResultSet, PreparedStatement 객체를 생성
try catch절로 예외처리
try절에서는 에러가 발생할 수 있는 코드들이 작성되며 catch절에서는 
에러가 발생했을 떄 수행하는 코드들이 작성됩니다.

JDBC가 있어야 DBMS를 사용할 수 있음
만약 드라이버가 로드되지 않았다면 에러가 발생할텐데 
이 에러가 발생했을 때 알림을 표시할 수 있게 해주는 것이 
try-catch역할이며, 어디에서 문제가 생겼는지 알 수 있는 것

url : 데이터베이스 연결주소와 데이터베이스이름이 입력


연결순서
	[1] JDBC 드라이버 로드
		1. Class.forName("oracle.jdbc.OracleDriver");
		
		
	[2] OracleDataSource 생성 및 정보입력
	
		OracleDataSource ods = new OracleDataSource();
   		ods.setURL("jdbc:oracle:thin:@localhost:1521/xe");
   		ods.setUser("...");
   		ods.setPassword("...");
		
	[3] DBMS에 커넥션(Connection:네트워크 연결)을 연다.
		※ Dirver Manager의 getConnection()을 이용 - Connection 객체 얻어오기.
		
		1. Connection 인스턴스에 기존에 생성해놓은 OracleDataSource 인스턴스를
		   이용하여 getConnection()을 이용하여 정보를 넣어준다.
	   
	   	2. PreparedStatement 인스턴스를 생성하여 기존의 생성해놓은 Connection 인스턴스의 PrepareStatement()
	   	   에 SQL문(기존에 생성해 놓은)을 넣어준다. 
	   	   
		[예제]
		try(Connection conn = ods.getConnection();
         PreparedStatement ps = conn.prepareStatement(sql.toString()))
	    {
	       ps.setString(1, title);
	       ps.setString(2, name);
	       ps.setString(3, password);
	       ps.setString(4, content);
	       ps.executeUpdate();
	       
	       result = true;
	    }catch(Exception e){
	       e.printStackTrace();
	    } 
		
		
	[4] 결과값 받아오기
	
		1. ResultSet 인스턴스를 생성하여 ps.executeQuery()를 이용하여 쿼리문을 사용한다.
		2. ResultSet.next()를 이용하여 BoardDTO에 set해준다.
	
		[예제]
		   try(ResultSet rs = ps.executeQuery())
		   {
		      while(rs.next()){
		         BoardDTO dto = new BoardDTO();
		         dto.setNo(rs.getLong("no"));
		         dto.setTitle(rs.getString("title"));
		         dto.setName(rs.getString("name"));
		         dto.setRegdate(rs.getDate("regdate"));
		         dto.setReadcount(Integer.parseInt(rs.getString("readcount")));
		         list.add(dto);
		      }
		      
		   }
		
		
	[5] 커넥션을 닫는다.
		1. rs.close();
		2. stmt.close();
		3. con.close();

ref)
https://java.ihoney.pe.kr/18
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
